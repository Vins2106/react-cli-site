{"version":3,"sources":["logo.svg","parts/Message.js","assets/commands.js","parts/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Message","message","settings","className","color","margin","echo","content","commands","name","run","args","setSettings","messages","addMessage","user","slice","join","colors","check","find","x","aliases","setMessages","window","link","open","a","disableInput","disableEffect","time","msgs","addRMsg","obj","push","wait","setInterval","setTimeout","first","clearInterval","map","cmd","username","blob","Blob","type","saveAs","location","reload","Input","txt","setTxt","formHandler","e","preventDefault","str","test","split","Commands","toLowerCase","onSubmit","id","onChange","document","getElementById","target","value","endsWith","style","height","scrollHeight","autoComplete","App","dummy","useRef","useState","tempSettings","JSON","parse","localStorage","getItem","display","processing","setProcessing","useEffect","input","focus","setItem","stringify","console","log","current","scrollIntoView","behavior","onClick","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e1832c12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\r\n\r\nconst Message = ({message, settings}) => {\r\n  return (\r\n  \t<span \r\n  \tclassName={`txt ${settings.color} ${message.margin ? 'txt-margin' : ''}`}>{message.echo ? \"@react-cli-site/v1.0.0 >â €\" : \"\"}{message.content}</span>\r\n  )  \r\n}\r\n\r\nexport default Message;\t\t","import tree from './tree.js';\r\nimport { saveAs } from 'file-saver';\r\n \r\nconst commands = [\r\n\t{\r\n\t\tname: \"echo\",\r\n\t\trun: (args, settings, setSettings, messages, addMessage) => {\r\n\t\t\tif (!args[1]) return addMessage({\r\n\t\t\t\tcontent: \"required a option[on, off] or text\",\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true,\r\n\t\t\t})\r\n\r\n\t\t\tif (args[1] === \"on\") {\r\n\t\t\t\tsetSettings({\r\n\t\t\t\t\t...settings,\r\n\t\t\t\t\techo: true\r\n\t\t\t\t})\r\n\r\n\t\t\t\taddMessage({\r\n\t\t\t\t\tcontent: \"echo now is 'on'\",\r\n\t\t\t\t\tuser: false,\r\n\t\t\t\t\techo: false,\r\n\t\t\t\t\tmargin: true\r\n\t\t\t\t})\r\n\t\t\t} else if (args[1] === \"off\") {\r\n\t\t\t\tsetSettings({\r\n\t\t\t\t\t...settings,\r\n\t\t\t\t\techo: false\r\n\t\t\t\t})\r\n\r\n\t\t\t\taddMessage({\r\n\t\t\t\t\tcontent: \"echo now is 'off'\",\r\n\t\t\t\t\tuser: false,\r\n\t\t\t\t\techo: false,\r\n\t\t\t\t\tmargin: true\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\taddMessage({\r\n\t\t\t\t\tcontent: args.slice(1).join(\" \"),\r\n\t\t\t\t\tuser: false,\r\n\t\t\t\t\techo: false,\r\n\t\t\t\t\tmargin: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"color\",\r\n\t\trun: (args, settings, setSettings, messages, addMessage) => {\r\n\r\n\t\t\tlet color = args[1];\r\n\t\t\tlet colors = ['a', 'b', 'c', 'd'];\r\n\r\n\t\t\tif (!color) return addMessage({\r\n\t\t\t\tcontent: `required a colors[${colors.join(\", \")}]`,\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true,\r\n\t\t\t})\r\n\r\n\r\n\t\t\tlet check = colors.find(x => x == color);\r\n\t\t\tif (!check) {\r\n\t\t\t\treturn addMessage({\r\n\t\t\t\t\tcontent: `not a color name. [${colors.join(\", \")}]`\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetSettings({\r\n\t\t\t\t...settings,\r\n\t\t\t\tcolor: check\r\n\t\t\t})\r\n\r\n\t\t\taddMessage({\r\n\t\t\t\tcontent: `color changed to '${check}'`,\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"redirect\",\r\n\t\taliases: [\"rd\"],\r\n\t\trun: (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\tlet link = args.slice(1).join(\" \");\r\n\r\n\t\t\tif (!link) return addMessage({\r\n\t\t\t\tcontent: \"required url/link\",\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true,\r\n\t\t\t})\r\n\r\n\t\t\twindow.open(link, '_blank');\r\n\r\n\t\t\taddMessage({\r\n\t\t\t\tcontent: `redirecting to ${link}`,\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true,\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"clear\",\r\n\t\taliases: [\"cls\"],\r\n\t\trun: (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\tsetMessages([])\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"tree\",\r\n\t\trun: async (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\taddMessage({\r\n\t\t\t\tcontent: 'This website is cannot show you the file tree because: out of memory',\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"repeat\",\r\n\t\trun: (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\tlet content = args.slice(1).join(\" \");\r\n\t\t\tif (!content) return addMessage({\r\n\t\t\t\tcontent: \"required text\",\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true\r\n\t\t\t})\r\n\r\n\t\t\tsetSettings({\r\n\t\t\t\t...settings,\r\n\t\t\t\tdisableInput: true,\r\n\t\t\t\tdisableEffect: true\r\n\t\t\t})\r\n\r\n\t\t\tlet time = 5;\r\n\r\n\t\t\tlet msgs = [];\r\n\r\n\t\t\tfunction addRMsg(obj) {\r\n\t\t\t\tsetMessages([\r\n\t\t\t\t\t...msgs,\r\n\t\t\t\t\tobj\r\n\t\t\t\t])\r\n\t\t\t\tmsgs.push(obj);\r\n\t\t\t}\r\n\r\n\t\t\taddRMsg(\r\n\t\t\t\t{\r\n\t\t\t\t\tcontent: `Repeat will start in ${time}`,\r\n\t\t\t\t\tuser: false,\r\n\t\t\t\t\techo: false\r\n\t\t\t\t})\r\n\t\t\ttime--\r\n\r\n\r\n\t\t\tlet wait = setInterval(() => {\r\n\t\t\t\taddRMsg({\r\n\t\t\t\t\tcontent: `Repeat will start in ${time}`,\r\n\t\t\t\t\tuser: false,\r\n\t\t\t\t\techo: false\r\n\t\t\t\t});\r\n\t\t\t\ttime--;\r\n\t\t\t}, 1000);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tlet first = true;\r\n\t\t\t\tclearInterval(wait);\r\n\t\t\t\tsetInterval(() => {\r\n\t\t\t\t\tif (first) {\r\n\t\t\t\t\t\taddRMsg({\r\n\t\t\t\t\t\t\tcontent: content,\r\n\t\t\t\t\t\t\tuser: false,\r\n\t\t\t\t\t\t\techo: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn first = false;\r\n\t\t\t\t\t} \r\n\t\t\t\t\t\taddRMsg(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcontent: content,\r\n\t\t\t\t\t\t\t\tuser: false,\r\n\t\t\t\t\t\t\t\techo: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}, 10)\r\n\t\t\t}, time * 1000 + 1000)\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"help\",\r\n\t\taliases: [\"h\"],\r\n\t\trun: (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\taddMessage({\r\n\t\t\t\tcontent: `\r\n${commands.map(cmd => `${cmd.name}`).join(\", \")}\r\n`,\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"username\",\r\n\t\taliases: [\"user\"],\r\n\t\trun: (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\tlet username = args.slice(1).join(\" \");\r\n\t\t\tif (!username) {\r\n\t\t\t\treturn addMessage({\r\n\t\t\t\t\tcontent: settings.username,\r\n\t\t\t\t\tuser: false,\r\n\t\t\t\t\techo: false,\r\n\t\t\t\t\tmargin: true\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tsetSettings({\r\n\t\t\t\t\t...settings,\r\n\t\t\t\t\tusername\r\n\t\t\t\t});\r\n\r\n\t\t\t\taddMessage({\r\n\t\t\t\t\tcontent: `your username changed to ${username}`,\r\n\t\t\t\t\tuser: false,\r\n\t\t\t\t\techo: false,\r\n\t\t\t\t\tmargin: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"save-ts\",\r\n\t\taliases: [\"sts\"],\r\n\t\trun: (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\tlet blob = new Blob([messages.map(x => x.content).join(\"\\n\")], { type: \"text/plain\" });\r\n\t\t\tsaveAs(blob, 'RCS.transcript.txt');\r\n\r\n\t\t\taddMessage({\r\n\t\t\t\tcontent: \"Transcript has been exported\",\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tname: \"refresh\",\r\n\t\taliases: [\"rf\"],\r\n\t\trun: (args, settings, setSettings, messages, addMessage, setMessages, window) => {\r\n\t\t\twindow.location.reload();\r\n\t\t\taddMessage({\r\n\t\t\t\tcontent: \"refreshing page...\",\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n]\r\n\r\nexport default commands;","import React, { useState, useEffect } from 'react';\r\nimport Commands from '../assets/commands.js';\r\n\r\nconst Input = ({txt, setTxt, settings, setSettings, messages, addMessage, setMessages}) => {\r\n\r\n\tfunction isBlank(str) {\r\n\t    return (!str || /^\\s*$/.test(str));\r\n\t}\r\n\r\n\tconst txtHandler = (e) => {\r\n\t\tlet form = document.getElementById(\"form\");\r\n\r\n\t\tif (e.target.value.endsWith(\"\\n\")) {\r\n\t\t\treturn formHandler(null)\r\n\t\t}\r\n\r\n\t\tsetTxt(e.target.value);\r\n\t\te.target.style.height = \"\";\r\n\t\te.target.style.height = e.target.scrollHeight + \"px\"\r\n\t}\r\n\r\n\tconst formHandler = (e) => {\r\n\t\tif (e) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\tif (isBlank(txt)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\taddMessage({\r\n\t\t\tcontent: txt,\r\n\t\t\tuser: true,\r\n\t\t\techo: settings.echo\r\n\t\t})\r\n\r\n\t\tlet args = txt.split(/ +/g);\r\n\t\tlet content = args[0];\r\n\r\n\t\tlet cmd = Commands.find(x => x.name.toLowerCase() == content.toLowerCase())\r\n\t\tif (!cmd) {\r\n\t\t\taddMessage({\r\n\t\t\t\tcontent: `'${content}' is not a command. try to typing 'help'`,\r\n\t\t\t\tuser: false,\r\n\t\t\t\techo: false,\r\n\t\t\t\tmargin: true\r\n\t\t\t});\r\n\r\n\t\t\treturn setTxt('')\r\n\t\t}\r\n\r\n\t\tcmd.run(args, settings, setSettings, messages, addMessage, setMessages, window);\r\n\t\treturn setTxt('')\r\n\t}\r\n\r\n  return (\r\n  \t<div>\r\n  \t\t<form onSubmit={formHandler} className=\"form\" id=\"form\">\r\n\t  \t\t<span\r\n\t  \t\tclassName={`txt ${settings.color} echo`}>{settings.echo ? \"@react-cli-site/v1.0.0 >â €\" : \"\"}</span>\r\n\t  \t\t<input\r\n\t  \t\tname=\"message\" \r\n\t  \t\tid=\"input\" \r\n\t  \t\tonChange={txtHandler}  \r\n\t  \t\tautoComplete=\"off\"\r\n\t  \t\tvalue={txt}\r\n\t  \t\tclassName={`input ${settings.color}`}\r\n\t  \t\t>\r\n\t  \t\t</input>\r\n  \t\t</form>\r\n  \t</div>\r\n  )  \r\n}\r\n\r\nexport default Input;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Message from './parts/Message.js';\r\nimport Input from './parts/Input.js';\r\n\r\nfunction App() {\r\n  const dummy = useRef();\r\n\r\n  const [messages, setMessages] = useState([\r\n      {\r\n        content: \"React cli site [v1.0.0]\",\r\n        echo: false,\r\n        user: false\r\n      },\r\n      {\r\n        content: \"(C) Vins 2106. All rights reserved.\",\r\n        echo: false,\r\n        user: false,\r\n        margin: true\r\n      }\r\n    ]);\r\n  const [txt, setTxt] = useState('');\r\n  let tempSettings = JSON.parse(localStorage.getItem(\"settings\")) || {\r\n    color: 'a',\r\n    username: 'RCS@User',\r\n    echo: true\r\n  }\r\n  const [settings, setSettings] = useState({\r\n    color: tempSettings.color,\r\n    username: tempSettings.username,\r\n    echo: tempSettings.echo\r\n  });\r\n  const [processing, setProcessing] = useState({\r\n    type: false,\r\n    display: \"block\"\r\n  });\r\n\r\n  const sendMessage = (obj) => {\r\n    setMessages([\r\n      ...messages,\r\n      {\r\n        content: txt,\r\n        user: true,\r\n        echo: settings.echo\r\n      },\r\n      obj\r\n    ])\r\n  } \r\n\r\n\r\n  useEffect(() => {\r\n    let input = document.getElementById(\"input\");\r\n    if (input) {\r\n      input.focus();\r\n    }\r\n    localStorage.setItem(\"settings\", JSON.stringify({\r\n      color: settings.color,\r\n      username: settings.username,\r\n      echo: settings.echo\r\n    }))\r\n    console.log('[SETTINGS]: updated!');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }, [settings, messages])\r\n\r\n  const focusHandler = () => {\r\n    document.getElementById(\"input\").focus();\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\" onClick={focusHandler}>\r\n      <div className=\"container\">\r\n        <div className=\"messages\" id=\"messages\">\r\n          {messages.map(message => (\r\n            <Message \r\n            message={message} \r\n            settings={settings} />\r\n          ))}\r\n        </div>\r\n        {settings.disableInput ? \"\" : <Input \r\n        txt={txt} \r\n        setTxt={setTxt}\r\n        settings={settings}\r\n        setSettings={setSettings} \r\n        processing={processing} \r\n        setProcessing={setProcessing}\r\n        messages={messages}\r\n        addMessage={sendMessage}\r\n        setMessages={setMessages}\r\n         />}\r\n\r\n         <span ref={dummy}></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}